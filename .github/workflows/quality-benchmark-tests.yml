name: "quality, benchmark and tests"

on:
  push:
    branches:
      - dev
  pull_request:
    branches: 
      - dev

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  test-application:
    name: Test Application
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-environment
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}          

      - name: Run Rust tests
        run: cargo test

      - name: Run Rust tests
        run: cargo bench

      - name: Save benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: target/criterion

      - name: install clippy
        run: rustup component add clippy

      - name: Run Clippy
        run: cargo clippy --message-format=json -- -D warnings > clippy-report.json

      - name: Upload Clippy Report
        uses: actions/upload-artifact@v4
        with:
          name: clippy-report
          path: clippy-report.json
      
      - name: Run Cargo Audit
        run: cargo audit --json > cargo-audit-report.json
  
      - name: Upload cargo audit report
        uses: actions/upload-artifact@v4
        with:
          name: cargo-audit-report
          path: cargo-audit-report.json
  
      # TODO: Add NPM Audit & NextJS Linting