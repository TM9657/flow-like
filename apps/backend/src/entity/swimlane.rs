//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use super::sea_orm_active_enums::SwimlaneSize;
use super::sea_orm_active_enums::SwimlaneType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Swimlane")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub id: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub title: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub r#type: SwimlaneType,
    pub size: SwimlaneSize,
    pub tags: Option<Vec<String>>,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: DateTime,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::swimlane_item::Entity")]
    SwimlaneItem,
}

impl Related<super::swimlane_item::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SwimlaneItem.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
